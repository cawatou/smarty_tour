<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DomainObjectModel_Request', 'main');

/**
 * DomainObjectModel_BaseRequest
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $request_id
 * @property integer $user_id
 * @property integer $office_id
 * @property enum $request_type
 * @property enum $request_status
 * @property string $request_user_name
 * @property string $request_user_phone
 * @property string $request_user_email
 * @property string $request_user_ip
 * @property string $request_extended_data
 * @property string $request_message
 * @property string $request_answer
 * @property timestamp $created
 * @property timestamp $updated
 * @property DomainObjectModel_Office $Office
 * @property DomainObjectModel_User $User
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class DomainObjectModel_BaseRequest extends DomainObjectModel
{
    public function setTableDefinition()
    {
        $this->setTableName('moihottur__request');
        $this->hasColumn('request_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('office_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('request_type', 'enum', 12, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' =>
             array(
              0 => 'REQUEST',
              1 => 'ORDER',
              2 => 'ORDER_SHORT',
              3 => 'CALLBACK',
              4 => 'SLETAT_ORDER',
			  5 => 'SLETAT_ONLINE',
             ),
             'primary' => false,
             'default' => 'REQUEST',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '12',
             ));
        $this->hasColumn('request_status', 'enum', 8, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' =>
             array(
              0 => 'ENABLED',
              1 => 'DISABLED',
             ),
             'primary' => false,
             'default' => 'ENABLED',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '8',
             ));
        $this->hasColumn('request_user_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('request_user_phone', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('request_user_email', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('request_user_ip', 'string', 15, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '15',
             ));
        $this->hasColumn('request_extended_data', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('request_message', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('request_answer', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DomainObjectModel_Office as Office', array(
             'local' => 'office_id',
             'foreign' => 'office_id'));

        $this->hasOne('DomainObjectModel_User as User', array(
             'local' => 'user_id',
             'foreign' => 'user_id'));
    }
}