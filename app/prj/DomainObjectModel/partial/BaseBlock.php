<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DomainObjectModel_Block', 'main');

/**
 * DomainObjectModel_BaseBlock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $block_id
 * @property string $block_alias
 * @property enum $block_category
 * @property string $block_name
 * @property string $block_title
 * @property string $block_content
 * @property enum $block_type
 * @property integer $block_qnt
 * @property timestamp $created
 * @property timestamp $updated
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class DomainObjectModel_BaseBlock extends DomainObjectModel
{
    public function setTableDefinition()
    {
        $this->setTableName('moihottur__block');
        $this->hasColumn('block_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('block_alias', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('block_category', 'enum', 13, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'COMMON',
              1 => 'MAIN',
              2 => 'SIDEBAR_RIGHT',
             ),
             'primary' => false,
             'default' => 'COMMON',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '13',
             ));
        $this->hasColumn('block_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('block_title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '255',
             ));
        $this->hasColumn('block_content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('block_type', 'enum', 7, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'TEXT',
              1 => 'WYSIWYG',
              2 => 'CODE',
             ),
             'primary' => false,
             'default' => 'WYSIWYG',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '7',
             ));
        $this->hasColumn('block_qnt', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('created', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('updated', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}